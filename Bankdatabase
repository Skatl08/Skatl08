use [Banking Database]
select * from [dbo].[Bank_Account_Details]
select * from[dbo].[Bank_Account_Relationship_Details]
select * from [dbo].[Bank_Inventory_pricing]
-- Print product, price, sum of quantity more than 5 sold during all three months.  
select product,MONTH, SUM(quantity) from [dbo].[Bank_Inventory_pricing]
group by product,month 
having sum(quantity) >5

--#Q2.Print product, quantity , month and count of records for which estimated_sale_price is less than purchase_cost
select product,quantity,MONTH,count(*)from [dbo].[Bank_Inventory_pricing]
where Estimated_sale_price <purchase_cost
group by product,quantity,month

select product,quantity,MONTH from [dbo].[Bank_Inventory_pricing]
where Estimated_sale_price <purchase_cost

--#Q3. Extarct the 3rd highest value of column Estimated_sale_price from bank_inventory_pricing dataset


select estimated_sale_price from [dbo].[Bank_Inventory_pricing]
order by estimated_sale_price 

SELECT Estimated_sale_price FROM bank_inventory_pricing ORDER BY Estimated_sale_price DESC LIMIT 2,1;

--#Q4. Count all duplicate values of column Product from table bank_inventory_pricing
select COUNT(product) from [dbo].[Bank_Inventory_pricing]
select distinct(product) from [dbo].[Bank_Inventory_pricing]

select product,COUNT(product) from [dbo].[Bank_Inventory_pricing]
 group by product having COUNT(product)>1

--#Q5. Create a view 'bank_details' for the product 'PayPoints' and Quantity is greater than 2 

create view bank_details as 
select * from [dbo].[Bank_Inventory_pricing]
where product='Paypoints' and quantity >2

select * from bank_details

--#Q7.Real Profit = revenue - cost  Find for which products, branch level real profit is more than the estimated_profit in Bank_branch_PL.
 select * from [dbo].[Bank_branch_PL]

 select branch,product,(revenue-cost)as "Real Proft",estimated_profit from [dbo].[Bank_branch_PL] 

 where (revenue-cost)>(estimated_profit )

 
--#Q8.Find the least calculated profit earned during all 3 periods

select branch,product,MIN(revenue-cost)"least Profit" from [dbo].[Bank_branch_PL] 
group by branch,product



--#Q9. In Bank_Inventory_pricing, 
-- a) convert Quantity data type from numeric to character 
-- b) Add then, add zeros before the Quantity field.  
select * from [dbo].[Bank_Inventory_pricing]
 select CONVERT(char(10),quantity) from [dbo].[Bank_Inventory_pricing]

 select CONCAT(0,quantity) from [dbo].[Bank_Inventory_pricing]
 select FORMAT(quantity,'0#')from [dbo].[Bank_Inventory_pricing]

--#Q10. Write a MySQL Query to print first_name , last_name of the titanic_ds whose first_name Contains ‘U’
select * from [dbo].[employee_details]

select first_name , last_name from [dbo].[employee_details] where first_name like '%U%'
